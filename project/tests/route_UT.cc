/* STUDENTS:  DO NOT EDIT THIS FILE.  INSTEAD, MODIFY YOUR OWN PROJECT
 * CODE TO FIT THE SPECIFICATION GIVEN BY THE TESTS IN THIS FILE.
 *
 * If you DO modify it, we overwrite it with a fresh version from our repo
 * when grading, so you can't use it to fudge the tests anyway.
 *
 * This file is used by the CS3081W auto-grading system.
 *
 * Please note, the assessment tests for grading, will use the same include
 * files, class names, and function names for accessing students' code that you
 * find in this file.  So students, if you write your code so that it passes
 * these feedback tests, you can be assured that the auto-grader will at least
 * be able to properly link with your code.
 */

/*******************************************************************************
 * Includes
 ******************************************************************************/
#include <gtest/gtest.h>

#include <iostream>
#include <string>
#include <list>
#include <string>

#include "../src/passenger_loader.h"
#include "../src/passenger_unloader.h"
#include "../src/passenger_generator.h"
#include "../src/passenger.h"
#include "../src/random_passenger_generator.h"
#include "../src/stop.h"
#include "../src/route.h"

using namespace std;

/******************************************************
* TEST FEATURE SetUp
*******************************************************/
class RouteTests : public ::testing::Test {
protected:
  Route *route;


  virtual void SetUp() {
    Stop ** CC_EB_stops = new Stop *[1];
    std::list<Stop *> CC_EB_stops_list;
    Stop stop_CC_EB_1(0, 43, -92.5);
    CC_EB_stops_list.push_back(&stop_CC_EB_1);
    CC_EB_stops[0] = &stop_CC_EB_1;
    double * CC_EB_distances = new double[1];
    CC_EB_distances[0] = 5;
    std::list<double> CC_EB_probs;
    CC_EB_probs.push_back(.15);
    RandomPassengerGenerator CC_EB_generator(CC_EB_probs, CC_EB_stops_list);
    route = new Route("out", CC_EB_stops, CC_EB_distances, 1, &CC_EB_generator);
  }

  virtual void TearDown() {
    delete route;
    route = NULL;
  }
};


/*******************************************************************************
 * Test Cases
 ******************************************************************************/

TEST_F(RouteTests, RouteConstructorTests) {
};

// TEST_F(RouteTests, IsAtEndTests) {
//   EXPECT_EQ(route->IsAtEnd(), true) << "IsAtEnd() incorrect" << endl;
// };
